{
  "name": "visual-oo-debugger",
  "publisher": "OST",
  "displayName": "Visual OO-Debugger",
  "description": "A visual debugger for Java for teaching object-oriented programming. The extension visualizes objects and variables graphically and can run a program step by step to facilitate a better understanding of how objects and variables change over the course of a program.",
  "version": "0.0.1",
  "engines": {
    "node": "^16",
    "vscode": "^1.61.0"
  },
  "categories": [
    "Debuggers"
  ],
  "activationEvents": [
    "onCommand:visual-oo-debugger.openDebugger",
    "onCommand:visual-oo-debugger.exportPNG",
    "onDebug"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "visual-oo-debugger.openDebugger",
        "title": "Open debugger view",
        "category": "VOOD"
      },
      {
        "command": "visual-oo-debugger.exportPNG",
        "title": "Export as PNG",
        "category": "VOOD"
      },
      {
        "command": "visual-oo-debugger.startGIF",
        "title": "Start recording a GIF",
        "category": "VOOD"
      },
      {
        "command": "visual-oo-debugger.stopGIF",
        "title": "Stop recording a GIF",
        "category": "VOOD"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "visual-oo-debugger.exportPNG",
          "when": "viewPanel.exists"
        },
        {
          "command": "visual-oo-debugger.startGIF",
          "when": "viewPanel.exists"
        },
        {
          "command": "visual-oo-debugger.stopGIF",
          "when": "viewPanel.exists"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile:ext",
    "compile:ext": "tsc -p ./tsconfig.ext.json",
    "compile:ext:watch": "npm run compile:ext -- --watch",
    "compile:test": "tsc -p ./tsconfig.test.json",
    "lint:check": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "format:check": "prettier --check .",
    "format:write": "prettier --write .",
    "pretest:ext": "npm run compile:ext && npm run compile:test",
    "test:ext": "node ./out/test/runTest.js",
    "test:spec": "cross-env TS_NODE_PROJECT=\"tsconfig.spec.json\" mocha -r ts-node/register \"src/**/*.spec.ts\"",
    "test:spec:watch": "npm run test:spec -- --watch --watch-files src"
  },
  "devDependencies": {
    "@types/chai": "4.2.22",
    "@types/chai-fs": "2.0.2",
    "@types/glob": "^7.1.4",
    "@types/lodash": "^4.14.176",
    "@types/mocha": "^9.0.0",
    "@types/node": "^16.0.0",
    "@types/object-hash": "^2.2.1",
    "@types/vscode": "^1.61.0",
    "@typescript-eslint/eslint-plugin": "^4.31.1",
    "@typescript-eslint/parser": "^4.31.1",
    "@vscode/test-electron": "^1.6.2",
    "chai": "4.3.4",
    "chai-fs": "2.0.0",
    "cross-env": "7.0.3",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "8.3.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.1",
    "prettier": "2.4.1",
    "ts-node": "10.4.0",
    "typescript": "^4.4.3"
  },
  "dependencies": {
    "@ffmpeg/core": "^0.10.0",
    "@ffmpeg/ffmpeg": "^0.10.1",
    "lodash": "^4.17.21",
    "object-hash": "^2.2.0",
    "vis-network": "^9.1.0"
  }
}
